#! /usr/bin/env python
#
# GUI module generated by PAGE version 4.11
# In conjunction with Tcl version 8.6
#    Mar 13, 2018 09:33:20 PM

import sys
import main
import os
import gmplot
import webbrowser
import googlemaps

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import support


top=None
def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    support.set_Tk_var()
    top = New_Toplevel (root)
    support.init(root, top)
    root.mainloop()

w = None
def create_New_Toplevel(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    support.set_Tk_var()
    top = New_Toplevel (w)
    support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_New_Toplevel():
    global w
    w.destroy()
    w = None


class New_Toplevel:
    def showmap(self):
        webbrowser.open('file://' + os.path.realpath("result_map.html"))

    def findRoute(self):
        self.Text1.delete('1.0', END)

        print(str(support.che39.get())+str(support.che40.get())+str(support.che45.get())+str(support.che46.get())+str(support.che47.get())+str(self.Entry2.get())+self.Entry1.get())
        mattype=0
        if(str(support.che39.get())=="1"):
            mattype=1
        elif(str(support.che40.get())=="1"):
            mattype=0
        algo=0
        if(str(support.che46.get())=="1"):
            algo=1
        elif(str(support.che47.get())=="1"):
            algo=2
        elif(str(support.che38.get())=="1"):
            algo=3
        elif(str(support.che41.get())=="1"):
            algo=4
        elif(str(support.che42.get())=="1"):
            algo=5
        elif(str(support.che44.get())=="1"):
            algo=6
        elif(str(support.che48.get())=="1"):
            algo=7

        #tobe addeed
        print(algo,mattype,str(self.Entry1.get()),str(self.Entry2.get()))
        opt=0
        if(len(str(self.Entry3.get()))>0):
            opt=1
        strarg=main.routerFunc(algo,mattype,str(self.Entry1.get()),str(self.Entry2.get()),opt,str(self.Entry3.get()))
        print(strarg)
        self.Text1.insert(INSERT,strarg)
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#d9d9d9' # X11 color: 'gray85'

        top.geometry("660x425+495+172")
        top.title("Assignment 1")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")



        self.Button1 = Button(top)
        self.Button1.place(relx=0.55, rely=0.54, height=24, width=87)
        self.Button1.configure(activebackground="#d9d9d9")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background="#d9d9d9")
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''FindRoute''')
        self.Button1.configure(command=self.findRoute)

        self.Button2 = Button(top)
        self.Button2.place(relx=0.76, rely=0.54, height=24, width=87)
        self.Button2.configure(activebackground="#d9d9d9")
        self.Button2.configure(activeforeground="#000000")
        self.Button2.configure(background="#d9d9d9")
        self.Button2.configure(disabledforeground="#a3a3a3")
        self.Button2.configure(foreground="#000000")
        self.Button2.configure(highlightbackground="#d9d9d9")
        self.Button2.configure(highlightcolor="black")
        self.Button2.configure(pady="0")
        self.Button2.configure(text='''Show On Map''')
        self.Button2.configure(command=self.showmap)

        self.Checkbutton1 = Checkbutton(top)
        self.Checkbutton1.place(relx=0.76, rely=0.45, relheight=0.06
                , relwidth=0.11)
        self.Checkbutton1.configure(activebackground="#d9d9d9")
        self.Checkbutton1.configure(activeforeground="#000000")
        self.Checkbutton1.configure(background="#d9d9d9")
        self.Checkbutton1.configure(disabledforeground="#a3a3a3")
        self.Checkbutton1.configure(foreground="#000000")
        self.Checkbutton1.configure(highlightbackground="#d9d9d9")
        self.Checkbutton1.configure(highlightcolor="black")
        self.Checkbutton1.configure(justify=LEFT)
        self.Checkbutton1.configure(text='''Duration''')
        self.Checkbutton1.configure(variable=support.che39)

        self.Checkbutton2 = Checkbutton(top)
        self.Checkbutton2.place(relx=0.55, rely=0.45, relheight=0.06
                , relwidth=0.11)
        self.Checkbutton2.configure(activebackground="#d9d9d9")
        self.Checkbutton2.configure(activeforeground="#000000")
        self.Checkbutton2.configure(background="#d9d9d9")
        self.Checkbutton2.configure(disabledforeground="#a3a3a3")
        self.Checkbutton2.configure(foreground="#000000")
        self.Checkbutton2.configure(highlightbackground="#d9d9d9")
        self.Checkbutton2.configure(highlightcolor="black")
        self.Checkbutton2.configure(justify=LEFT)
        self.Checkbutton2.configure(text='''Distance''')
        self.Checkbutton2.configure(variable=support.che40)

        self.Entry1 = Entry(top)
        self.Entry1.place(relx=0.18, rely=0.14,height=20, relwidth=0.25)
        self.Entry1.configure(background="white")
        self.Entry1.configure(disabledforeground="#a3a3a3")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(foreground="#000000")
        self.Entry1.configure(highlightbackground="#d9d9d9")
        self.Entry1.configure(highlightcolor="black")
        self.Entry1.configure(insertbackground="black")
        self.Entry1.configure(selectbackground="#c4c4c4")
        self.Entry1.configure(selectforeground="black")

        self.Label1 = Label(top)
        self.Label1.place(relx=0.11, rely=0.14, height=21, width=34)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''From''')

        self.Label2 = Label(top)
        self.Label2.place(relx=0.12, rely=0.24, height=21, width=20)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''To''')

        self.Entry2 = Entry(top)
        self.Entry2.place(relx=0.18, rely=0.24,height=20, relwidth=0.25)
        self.Entry2.configure(background="white")
        self.Entry2.configure(disabledforeground="#a3a3a3")
        self.Entry2.configure(font="TkFixedFont")
        self.Entry2.configure(foreground="#000000")
        self.Entry2.configure(highlightbackground="#d9d9d9")
        self.Entry2.configure(highlightcolor="black")
        self.Entry2.configure(insertbackground="black")
        self.Entry2.configure(selectbackground="#c4c4c4")
        self.Entry2.configure(selectforeground="black")

        self.Checkbutton3 = Checkbutton(top)
        self.Checkbutton3.place(relx=0.55, rely=0.12, relheight=0.06
                , relwidth=0.15)
        self.Checkbutton3.configure(activebackground="#d9d9d9")
        self.Checkbutton3.configure(activeforeground="#000000")
        self.Checkbutton3.configure(background="#d9d9d9")
        self.Checkbutton3.configure(disabledforeground="#a3a3a3")
        self.Checkbutton3.configure(foreground="#000000")
        self.Checkbutton3.configure(highlightbackground="#d9d9d9")
        self.Checkbutton3.configure(highlightcolor="black")
        self.Checkbutton3.configure(justify=LEFT)
        self.Checkbutton3.configure(text='''FloydWarshall''')
        self.Checkbutton3.configure(variable=support.che45)

        self.Checkbutton4 = Checkbutton(top)
        self.Checkbutton4.place(relx=0.55, rely=0.19, relheight=0.06
                , relwidth=0.14)
        self.Checkbutton4.configure(activebackground="#d9d9d9")
        self.Checkbutton4.configure(activeforeground="#000000")
        self.Checkbutton4.configure(background="#d9d9d9")
        self.Checkbutton4.configure(disabledforeground="#a3a3a3")
        self.Checkbutton4.configure(foreground="#000000")
        self.Checkbutton4.configure(highlightbackground="#d9d9d9")
        self.Checkbutton4.configure(highlightcolor="black")
        self.Checkbutton4.configure(justify=LEFT)
        self.Checkbutton4.configure(text='''BellmanFord''')
        self.Checkbutton4.configure(variable=support.che46)

        self.Checkbutton5 = Checkbutton(top)
        self.Checkbutton5.place(relx=0.55, rely=0.26, relheight=0.06
                , relwidth=0.1)
        self.Checkbutton5.configure(activebackground="#d9d9d9")
        self.Checkbutton5.configure(activeforeground="#000000")
        self.Checkbutton5.configure(background="#d9d9d9")
        self.Checkbutton5.configure(disabledforeground="#a3a3a3")
        self.Checkbutton5.configure(foreground="#000000")
        self.Checkbutton5.configure(highlightbackground="#d9d9d9")
        self.Checkbutton5.configure(highlightcolor="black")
        self.Checkbutton5.configure(justify=LEFT)
        self.Checkbutton5.configure(text='''Dijkstra''')
        self.Checkbutton5.configure(variable=support.che47)

        self.Entry3 = Entry(top)
        self.Entry3.place(relx=0.18, rely=0.45,height=20, relwidth=0.25)
        self.Entry3.configure(background="white")
        self.Entry3.configure(disabledforeground="#a3a3a3")
        self.Entry3.configure(font="TkFixedFont")
        self.Entry3.configure(foreground="#000000")
        self.Entry3.configure(highlightbackground="#d9d9d9")
        self.Entry3.configure(highlightcolor="black")
        self.Entry3.configure(insertbackground="black")
        self.Entry3.configure(selectbackground="#c4c4c4")
        self.Entry3.configure(selectforeground="black")

        self.Label3 = Label(top)
        self.Label3.place(relx=0.05, rely=0.45, height=21, width=77)
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="black")
        self.Label3.configure(text='''Excluded City''')

        self.Text1 = Text(top)
        self.Text1.place(relx=0.12, rely=0.68, relheight=0.2, relwidth=0.83)
        self.Text1.configure(background="white")
        self.Text1.configure(font="TkTextFont")
        self.Text1.configure(foreground="black")
        self.Text1.configure(highlightbackground="#d9d9d9")
        self.Text1.configure(highlightcolor="black")
        self.Text1.configure(insertbackground="black")
        self.Text1.configure(selectbackground="#c4c4c4")
        self.Text1.configure(selectforeground="black")
        self.Text1.configure(width=551)
        self.Text1.configure(wrap=WORD)

        self.Label4 = Label(top)
        self.Label4.place(relx=0.12, rely=0.61, height=21, width=44)
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(activeforeground="black")
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="black")
        self.Label4.configure(text='''Output''')

        self.Checkbutton6 = Checkbutton(top)
        self.Checkbutton6.place(relx=0.55, rely=0.33, relheight=0.06
                , relwidth=0.19)
        self.Checkbutton6.configure(activebackground="#d9d9d9")
        self.Checkbutton6.configure(activeforeground="#000000")
        self.Checkbutton6.configure(background="#d9d9d9")
        self.Checkbutton6.configure(disabledforeground="#a3a3a3")
        self.Checkbutton6.configure(foreground="#000000")
        self.Checkbutton6.configure(highlightbackground="#d9d9d9")
        self.Checkbutton6.configure(highlightcolor="black")
        self.Checkbutton6.configure(justify=LEFT)
        self.Checkbutton6.configure(text='''Nearest-Neighbor''')
        self.Checkbutton6.configure(variable=support.che38)

        self.Checkbutton7 = Checkbutton(top)
        self.Checkbutton7.place(relx=0.76, rely=0.12, relheight=0.06
                , relwidth=0.15)
        self.Checkbutton7.configure(activebackground="#d9d9d9")
        self.Checkbutton7.configure(activeforeground="#000000")
        self.Checkbutton7.configure(background="#d9d9d9")
        self.Checkbutton7.configure(disabledforeground="#a3a3a3")
        self.Checkbutton7.configure(foreground="#000000")
        self.Checkbutton7.configure(highlightbackground="#d9d9d9")
        self.Checkbutton7.configure(highlightcolor="black")
        self.Checkbutton7.configure(justify=LEFT)
        self.Checkbutton7.configure(text='''Hill Climbing''')
        self.Checkbutton7.configure(variable=support.che41)

        self.Checkbutton8 = Checkbutton(top)
        self.Checkbutton8.place(relx=0.76, rely=0.19, relheight=0.06
                , relwidth=0.12)
        self.Checkbutton8.configure(activebackground="#d9d9d9")
        self.Checkbutton8.configure(activeforeground="#000000")
        self.Checkbutton8.configure(background="#d9d9d9")
        self.Checkbutton8.configure(disabledforeground="#a3a3a3")
        self.Checkbutton8.configure(foreground="#000000")
        self.Checkbutton8.configure(highlightbackground="#d9d9d9")
        self.Checkbutton8.configure(highlightcolor="black")
        self.Checkbutton8.configure(justify=LEFT)
        self.Checkbutton8.configure(text='''Best-first''')
        self.Checkbutton8.configure(variable=support.che42)

        self.Checkbutton9 = Checkbutton(top)
        self.Checkbutton9.place(relx=0.76, rely=0.26, relheight=0.06
                , relwidth=0.15)
        self.Checkbutton9.configure(activebackground="#d9d9d9")
        self.Checkbutton9.configure(activeforeground="#000000")
        self.Checkbutton9.configure(background="#d9d9d9")
        self.Checkbutton9.configure(disabledforeground="#a3a3a3")
        self.Checkbutton9.configure(foreground="#000000")
        self.Checkbutton9.configure(highlightbackground="#d9d9d9")
        self.Checkbutton9.configure(highlightcolor="black")
        self.Checkbutton9.configure(justify=LEFT)
        self.Checkbutton9.configure(text='''A* algorithm''')
        self.Checkbutton9.configure(variable=support.che44)

        self.Checkbutton10 = Checkbutton(top)
        self.Checkbutton10.place(relx=0.76, rely=0.33, relheight=0.06
                , relwidth=0.2)
        self.Checkbutton10.configure(activebackground="#d9d9d9")
        self.Checkbutton10.configure(activeforeground="#000000")
        self.Checkbutton10.configure(background="#d9d9d9")
        self.Checkbutton10.configure(disabledforeground="#a3a3a3")
        self.Checkbutton10.configure(foreground="#000000")
        self.Checkbutton10.configure(highlightbackground="#d9d9d9")
        self.Checkbutton10.configure(highlightcolor="black")
        self.Checkbutton10.configure(justify=LEFT)
        self.Checkbutton10.configure(text='''Iterative Deepening''')
        self.Checkbutton10.configure(variable=support.che48)

        self.Label5 = Label(top)
        self.Label5.place(relx=0.55, rely=0.05, height=21, width=60)
        self.Label5.configure(background="#d9d9d9")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(text='''Algorithms''')

        self.Label6 = Label(top)
        self.Label6.place(relx=0.55, rely=0.4, height=21, width=75)
        self.Label6.configure(background="#d9d9d9")
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(text='''Selected Unit''')
        self.Checkbutton1.deselect()
        self.Checkbutton2.deselect()
        self.Checkbutton3.deselect()
        self.Checkbutton4.deselect()
        self.Checkbutton5.deselect()
        self.Checkbutton6.deselect()
        self.Checkbutton7.deselect()
        self.Checkbutton8.deselect()
        self.Checkbutton9.deselect()
        self.Checkbutton10.deselect()






if __name__ == '__main__':
    vp_start_gui()



